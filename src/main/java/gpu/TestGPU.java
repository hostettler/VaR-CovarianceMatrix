package gpu;

public class TestGPU {

	static final int INSTRUMENT_NUMBERS = 1 * 5000;
	static final int OBSERVATIONS_HISTORY = 506;

	final float instrumentsValueHistory[][] = new float[INSTRUMENT_NUMBERS][OBSERVATIONS_HISTORY];
//	final float instrumentsValueHistory[][] = new float[][] 
//		{{7.65,7.63,7.66,7.64,7.58,7.66,7.96,7.96,7.92,7.85,7.93,7.93,7.88,7.88,7.85,7.85,7.72,7.68,7.71,7.71,7.61,7.51,7.50,7.50,7.50,7.27,7.39,7.34,7.32,7.32,7.35,7.50,7.52,7.61,7.61,7.37,7.47,7.28,7.23,7.21,7.19,7.17,7.20,7.05,7.02,7.00,6.99,7.03,7.06,7.06,6.98,6.90,6.99,7.07,6.96,6.99,6.94,6.78,6.67,6.65,6.72,6.70,6.65,6.64,6.62,6.74,6.65,6.70,6.74,6.76,6.82,6.85,6.72,6.76,6.77,6.91,7.01,7.07,7.12,7.12,7.10,7.20,7.25,7.29,7.30,7.21,7.14,7.11,7.20,7.32,7.36,7.33,7.39,7.39,7.30,7.33,7.39,7.46,7.39,7.30,7.33,7.23,7.26,7.21,7.25,7.31,7.24,7.28,7.32,7.30,7.30,7.33,7.33,7.35,7.23,7.25,7.24,7.27,7.08,7.21,7.02,7.08,7.10,7.10,7.11,6.99,7.04,6.99,7.05,7.02,7.13,7.07,7.00,7.10,7.08,7.07,7.07,7.17,7.18,7.15,7.22,7.31,7.24,7.25,7.28,7.26,7.31,7.14,7.04,7.16,7.09,7.16,7.25,7.26,7.21,7.16,7.16,7.06,7.03,6.97,6.97,6.93,6.89,6.88,6.86,6.91,6.85,6.75,6.69,6.75,6.77,6.70,6.60,6.55,6.53,6.51,6.52,6.56,6.58,6.55,6.51,6.62,6.66,6.80,6.76,6.76,6.81,6.82,6.70,6.70,6.64,6.69,6.71,6.61,6.55,6.56,6.54,6.30,6.29,6.28,6.24,6.25,6.18,6.20,6.24,6.07,6.01,6.09,6.05,6.34,6.37,6.45,6.39,6.46,6.41,6.37,6.38,6.44,6.34,6.35,6.45,6.44,6.58,6.54,6.51,6.43,6.60,6.50,6.54,6.74,6.73,6.70,6.69,6.64,6.80,6.76,6.60,6.36,6.44,6.39,6.44,6.57,6.56,6.54,6.49,6.49,6.53,6.50,6.54,6.47,6.38,6.50,6.47,6.47,6.41,6.57,6.42,6.49,6.46,6.51,6.48,6.39,6.42,6.47,6.39,6.52,6.50,6.41,6.39,6.33,6.38,6.31,6.42,6.52,6.39,6.39,6.40,6.54,6.51,6.42,6.42,6.51,6.54,6.59,6.61,6.66,6.64,6.37,6.43,6.23,6.24,6.22,6.14,6.17,6.13,6.14,6.18,6.23,6.23,6.24,6.24,6.25,6.27,6.20,6.20,6.22,6.27,6.24,6.24,6.30,6.13,6.14,6.12,6.13,6.18,6.23,6.36,6.46,6.49,6.49,6.53,6.52,6.55,6.53,6.51,6.59,6.56,6.63,6.65,6.67,6.68,6.63,6.62,6.65,6.70,6.67,6.65,6.68,6.81,6.62,6.59,6.52,6.52,6.50,6.54,6.63,6.61,6.55,6.50,6.53,6.58,6.59,6.59,6.59,6.56,6.54,6.45,6.47,6.48,6.46,6.44,6.51,6.58,6.56,6.49,6.48,6.46,6.51,6.58,6.57,6.54,6.50,6.46,6.48,6.50,6.55,6.57,6.62,6.69,6.72,6.72,6.73,6.69,6.71,6.67,6.65,6.63,6.67,6.71,6.64,6.61,6.63,6.63,6.71,6.56,6.55,6.62,6.66,6.65,6.57,6.66,6.46,6.27,6.28,6.27,6.34,6.22,6.11,6.14,6.02,5.91,5.97,6.04,5.97,5.98,5.94,5.86,5.81,5.82,5.92,5.91,5.95,5.94,6.04,5.99,6.01,6.07,6.14,6.26,6.26,6.31,6.19,6.12,6.10,6.16,6.16,6.13,6.11,6.16,6.19,6.24,6.25,6.20,6.03,6.03,6.02,6.04,5.99,6.05,5.98,6.07,6.07,6.06,6.04,6.06,6.02,6.05,6.10,6.11,6.17,6.17,5.94,5.88,5.88,5.83,5.89,5.96,5.98,5.98,6.01,5.96,5.87,5.89,5.74,5.70,5.74,5.75,5.81,5.76,5.70,5.80,5.83,5.83,5.85,5.81,5.76,5.69,5.56,5.59,5.52,5.62,5.60,5.59,5.62,5.77,5.75,5.86,5.94,5.99,6.00,6.00,5.99,5.99,5.98,5.96,5.92},
//		{2.03,2.04,2.05,1.99,2.00,2.02,2.01,1.96,1.95,1.96,1.99,1.99,1.99,2.01,2.09,2.09,2.09,2.10,2.10,2.08,2.02,2.00,1.97,1.96,1.94,1.89,1.93,1.94,1.93,1.93,1.93,1.96,1.99,2.00,2.01,2.01,2.02,2.11,2.10,2.09,2.12,2.14,2.11,2.05,2.07,2.11,2.11,2.12,2.11,2.12,2.10,2.07,2.07,2.10,2.17,2.16,2.12,2.07,2.04,2.06,2.06,2.06,2.07,2.07,2.07,2.12,2.10,2.11,2.15,2.15,2.16,2.13,2.14,2.12,2.14,2.14,2.16,2.16,2.15,2.13,2.10,2.09,2.07,2.06,2.06,2.03,2.06,2.07,2.11,2.14,2.15,2.12,2.12,2.09,2.09,2.08,2.09,2.11,2.09,2.05,2.06,1.99,1.99,1.97,2.02,2.05,1.98,2.01,2.01,1.99,2.00,1.99,1.98,2.01,1.95,1.95,1.93,1.94,1.90,1.94,1.91,1.89,1.88,1.90,1.89,1.85,1.86,1.86,1.87,1.87,1.88,1.87,1.88,1.90,1.90,1.92,1.88,1.89,1.86,1.87,1.87,1.89,1.88,1.89,1.91,1.93,1.94,1.92,1.87,1.89,1.89,1.89,1.93,1.92,1.88,1.85,1.84,1.80,1.82,1.83,1.84,1.84,1.85,1.83,1.84,1.84,1.81,1.78,1.76,1.78,1.81,1.78,1.76,1.75,1.77,1.75,1.72,1.72,1.71,1.71,1.70,1.73,1.74,1.77,1.76,1.75,1.76,1.77,1.72,1.72,1.70,1.73,1.74,1.73,1.69,1.68,1.72,1.68,1.65,1.63,1.63,1.65,1.65,1.63,1.65,1.66,1.71,1.72,1.68,1.73,1.70,1.73,1.76,1.76,1.75,1.73,1.75,1.79,1.77,1.71,1.76,1.74,1.66,1.65,1.66,1.62,1.67,1.66,1.65,1.69,1.68,1.67,1.67,1.63,1.63,1.59,1.59,1.53,1.54,1.53,1.54,1.59,1.59,1.58,1.53,1.52,1.52,1.48,1.49,1.46,1.46,1.50,1.51,1.51,1.50,1.55,1.55,1.57,1.57,1.59,1.57,1.59,1.59,1.61,1.60,1.66,1.65,1.63,1.63,1.63,1.64,1.60,1.61,1.62,1.58,1.59,1.58,1.61,1.62,1.56,1.56,1.57,1.58,1.58,1.57,1.60,1.58,1.59,1.61,1.61,1.56,1.59,1.65,1.67,1.64,1.63,1.64,1.65,1.65,1.62,1.59,1.61,1.63,1.64,1.65,1.66,1.66,1.69,1.64,1.61,1.55,1.56,1.53,1.56,1.53,1.55,1.58,1.60,1.64,1.65,1.63,1.62,1.61,1.61,1.64,1.66,1.68,1.67,1.69,1.69,1.67,1.66,1.60,1.61,1.65,1.64,1.64,1.65,1.64,1.59,1.60,1.57,1.58,1.55,1.58,1.60,1.61,1.59,1.56,1.57,1.53,1.50,1.49,1.51,1.51,1.51,1.49,1.50,1.54,1.53,1.51,1.51,1.53,1.52,1.51,1.50,1.49,1.51,1.52,1.53,1.51,1.49,1.49,1.47,1.49,1.50,1.50,1.53,1.54,1.55,1.56,1.57,1.57,1.56,1.57,1.58,1.57,1.57,1.58,1.56,1.56,1.56,1.57,1.60,1.60,1.60,1.60,1.61,1.58,1.54,1.56,1.53,1.47,1.47,1.48,1.46,1.44,1.42,1.41,1.39,1.37,1.40,1.41,1.39,1.39,1.39,1.38,1.37,1.36,1.38,1.37,1.38,1.37,1.37,1.40,1.40,1.41,1.48,1.49,1.49,1.57,1.54,1.49,1.48,1.51,1.52,1.49,1.47,1.48,1.49,1.51,1.50,1.50,1.44,1.42,1.43,1.44,1.44,1.45,1.49,1.61,1.58,1.64,1.64,1.64,1.65,1.66,1.65,1.66,1.66,1.70,1.71,1.72,1.68,1.68,1.67,1.68,1.69,1.68,1.70,1.66,1.72,1.73,1.71,1.70,1.71,1.70,1.70,1.69,1.68,1.69,1.72,1.72,1.74,1.74,1.72,1.69,1.66,1.67,1.67,1.69,1.72,1.70,1.69,1.72,1.83,1.93,1.87,1.85,1.83,1.78,1.80,1.80,1.82,1.80,1.80},
//		{0.68,0.68,0.68,0.68,0.68,0.68,0.69,0.70,0.71,0.71,0.71,0.70,0.71,0.72,0.72,0.72,0.72,0.71,0.71,0.72,0.71,0.70,0.69,0.69,0.68,0.66,0.67,0.68,0.67,0.67,0.67,0.67,0.67,0.68,0.68,0.68,0.70,0.69,0.69,0.69,0.69,0.69,0.68,0.67,0.67,0.67,0.67,0.68,0.67,0.68,0.67,0.67,0.67,0.68,0.67,0.68,0.67,0.66,0.65,0.65,0.65,0.65,0.65,0.65,0.65,0.66,0.66,0.67,0.67,0.67,0.68,0.68,0.68,0.68,0.68,0.66,0.66,0.66,0.66,0.65,0.65,0.65,0.65,0.64,0.64,0.65,0.65,0.66,0.67,0.67,0.67,0.67,0.67,0.66,0.66,0.66,0.67,0.67,0.67,0.66,0.66,0.64,0.64,0.63,0.63,0.64,0.63,0.64,0.64,0.63,0.63,0.63,0.63,0.63,0.62,0.62,0.62,0.62,0.61,0.62,0.61,0.61,0.62,0.63,0.63,0.62,0.62,0.62,0.62,0.63,0.63,0.63,0.62,0.63,0.62,0.63,0.63,0.63,0.63,0.63,0.62,0.63,0.62,0.63,0.63,0.62,0.62,0.63,0.63,0.63,0.63,0.62,0.62,0.62,0.62,0.61,0.61,0.61,0.60,0.60,0.60,0.61,0.61,0.61,0.61,0.61,0.61,0.60,0.59,0.60,0.60,0.61,0.60,0.59,0.59,0.59,0.59,0.59,0.59,0.59,0.60,0.61,0.62,0.62,0.62,0.61,0.61,0.61,0.59,0.59,0.58,0.58,0.59,0.59,0.58,0.57,0.59,0.58,0.58,0.58,0.57,0.57,0.57,0.56,0.56,0.56,0.57,0.58,0.57,0.57,0.57,0.57,0.59,0.60,0.59,0.58,0.58,0.60,0.60,0.58,0.59,0.58,0.56,0.55,0.56,0.55,0.56,0.56,0.57,0.57,0.56,0.56,0.56,0.55,0.56,0.55,0.56,0.55,0.54,0.53,0.52,0.53,0.53,0.53,0.52,0.52,0.52,0.51,0.52,0.51,0.50,0.51,0.52,0.51,0.51,0.53,0.53,0.54,0.54,0.55,0.55,0.56,0.56,0.56,0.56,0.58,0.58,0.57,0.57,0.58,0.59,0.57,0.57,0.58,0.58,0.58,0.58,0.58,0.58,0.57,0.57,0.58,0.58,0.58,0.57,0.58,0.58,0.58,0.61,0.60,0.60,0.61,0.62,0.63,0.64,0.63,0.63,0.63,0.63,0.62,0.62,0.62,0.62,0.63,0.64,0.65,0.65,0.65,0.65,0.63,0.62,0.62,0.62,0.62,0.62,0.62,0.63,0.63,0.65,0.63,0.62,0.63,0.63,0.63,0.64,0.65,0.65,0.66,0.67,0.66,0.66,0.65,0.64,0.63,0.64,0.63,0.64,0.63,0.63,0.62,0.62,0.61,0.61,0.60,0.61,0.61,0.62,0.60,0.60,0.61,0.59,0.58,0.59,0.58,0.58,0.58,0.57,0.57,0.58,0.58,0.57,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.59,0.58,0.58,0.57,0.57,0.57,0.57,0.57,0.57,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.57,0.57,0.57,0.57,0.57,0.57,0.56,0.56,0.55,0.53,0.53,0.51,0.50,0.50,0.50,0.50,0.50,0.49,0.49,0.49,0.49,0.50,0.50,0.50,0.50,0.50,0.50,0.50,0.50,0.50,0.50,0.50,0.50,0.50,0.50,0.50,0.50,0.52,0.53,0.52,0.55,0.54,0.53,0.53,0.54,0.56,0.54,0.54,0.53,0.54,0.55,0.54,0.53,0.52,0.52,0.52,0.52,0.51,0.51,0.53,0.59,0.58,0.61,0.61,0.61,0.60,0.61,0.60,0.60,0.60,0.60,0.59,0.58,0.58,0.57,0.57,0.58,0.58,0.57,0.57,0.56,0.59,0.60,0.60,0.59,0.59,0.60,0.60,0.59,0.59,0.60,0.61,0.61,0.62,0.63,0.61,0.60,0.59,0.61,0.61,0.62,0.62,0.62,0.60,0.61,0.64,0.67,0.63,0.63,0.64,0.62,0.62,0.63,0.63,0.63,0.63},
//		{2.77,2.76,2.78,2.76,2.79,2.81,2.93,2.97,3.02,3.00,2.99,2.95,2.97,2.97,2.97,2.96,2.98,2.99,3.02,3.00,2.92,2.88,2.87,2.87,2.82,2.74,2.81,2.84,2.75,2.77,2.75,2.75,2.75,2.75,2.76,2.75,2.77,2.82,2.68,2.68,2.70,2.68,2.66,2.58,2.62,2.60,2.61,2.63,2.62,2.63,2.59,2.58,2.58,2.61,2.58,2.64,2.62,2.58,2.55,2.59,2.58,2.57,2.59,2.59,2.58,2.63,2.61,2.61,2.63,2.63,2.65,2.65,2.63,2.68,2.71,2.72,2.74,2.76,2.76,2.73,2.72,2.68,2.70,2.70,2.73,2.69,2.72,2.73,2.76,2.87,2.94,2.93,2.93,2.92,2.95,2.90,2.92,2.96,2.94,2.90,2.90,2.80,2.76,2.75,2.79,2.81,2.66,2.71,2.70,2.68,2.69,2.66,2.62,2.64,2.55,2.55,2.58,2.58,2.57,2.62,2.57,2.58,2.55,2.55,2.56,2.53,2.49,2.50,2.50,2.48,2.50,2.45,2.45,2.46,2.46,2.44,2.44,2.45,2.44,2.42,2.42,2.50,2.46,2.48,2.50,2.54,2.55,2.54,2.50,2.58,2.52,2.53,2.53,2.52,2.48,2.46,2.42,2.40,2.41,2.41,2.44,2.47,2.47,2.44,2.45,2.46,2.45,2.44,2.41,2.43,2.47,2.50,2.48,2.45,2.49,2.46,2.45,2.47,2.46,2.50,2.51,2.57,2.60,2.63,2.59,2.56,2.55,2.56,2.50,2.49,2.46,2.48,2.49,2.50,2.46,2.46,2.49,2.44,2.44,2.43,2.42,2.40,2.38,2.35,2.35,2.33,2.31,2.35,2.25,2.30,2.33,2.36,2.41,2.44,2.43,2.45,2.48,2.53,2.52,2.45,2.50,2.48,2.24,2.17,2.17,2.11,2.17,2.21,2.21,2.25,2.22,2.20,2.21,2.18,2.21,2.17,2.22,2.12,2.10,2.04,2.03,2.09,2.11,2.12,2.08,2.09,2.10,2.08,2.09,2.06,2.06,2.14,2.17,2.17,2.13,2.21,2.24,2.26,2.21,2.24,2.26,2.33,2.30,2.34,2.37,2.46,2.42,2.40,2.39,2.41,2.43,2.39,2.38,2.43,2.41,2.44,2.44,2.47,2.50,2.40,2.39,2.38,2.40,2.43,2.42,2.48,2.52,2.56,2.58,2.55,2.56,2.59,2.60,2.63,2.66,2.63,2.66,2.60,2.62,2.61,2.57,2.57,2.59,2.61,2.66,2.69,2.69,2.70,2.65,2.49,2.48,2.48,2.47,2.51,2.48,2.47,2.48,2.48,2.54,2.54,2.52,2.53,2.54,2.53,2.58,2.61,2.63,2.63,2.63,2.62,2.60,2.57,2.50,2.40,2.41,2.40,2.39,2.36,2.38,2.35,2.35,2.32,2.33,2.26,2.30,2.30,2.32,2.28,2.22,2.26,2.17,2.18,2.17,2.17,2.15,2.17,2.14,2.12,2.18,2.14,2.13,2.15,2.16,2.16,2.14,2.15,2.12,2.14,2.15,2.23,2.18,2.16,2.15,2.16,2.18,2.18,2.20,2.22,2.23,2.24,2.25,2.26,2.26,2.28,2.28,2.30,2.30,2.29,2.30,2.29,2.31,2.28,2.29,2.29,2.28,2.28,2.28,2.30,2.20,2.17,2.17,2.03,1.98,2.01,2.04,2.08,2.05,2.01,2.03,1.99,1.78,1.82,1.85,1.85,1.82,1.84,1.83,1.84,1.83,1.84,1.86,1.86,1.84,1.84,1.91,1.88,1.93,1.98,2.00,1.98,2.09,2.07,2.04,2.05,2.08,2.14,2.09,2.05,2.04,2.05,2.09,2.08,2.02,1.95,1.94,1.95,1.95,1.89,1.90,1.96,2.18,2.15,2.26,2.30,2.32,2.38,2.43,2.41,2.34,2.26,2.26,2.24,2.19,2.14,2.13,2.15,2.17,2.17,2.16,2.16,2.13,2.22,2.22,2.22,2.21,2.25,2.25,2.23,2.23,2.21,2.25,2.30,2.31,2.31,2.32,2.26,2.22,2.18,2.23,2.25,2.28,2.30,2.29,2.28,2.32,2.52,2.61,2.53,2.49,2.47,2.43,2.42,2.43,2.43,2.42,2.40},
//		{7.78,7.78,7.92,7.94,7.95,7.93,8.19,8.29,8.33,8.16,8.17,8.20,8.19,8.19,8.24,8.34,8.26,8.33,8.49,8.39,8.14,8.20,8.24,8.14,8.12,7.85,8.04,7.98,7.88,8.02,8.04,8.09,8.18,8.22,8.19,8.20,8.31,8.30,8.30,8.29,8.39,8.11,7.96,7.80,7.75,7.84,7.82,7.78,7.79,7.82,7.77,7.64,7.69,7.67,7.55,7.50,7.47,7.27,7.14,7.07,7.19,7.15,7.13,7.04,7.01,7.20,7.13,7.15,7.25,7.30,7.33,7.34,7.27,7.28,7.30,7.45,7.64,7.65,7.69,7.53,7.49,7.62,7.67,7.69,7.61,7.42,7.48,7.40,7.49,7.65,7.69,7.62,7.66,7.61,7.55,7.50,7.54,7.67,7.70,7.54,7.51,7.40,7.43,7.55,7.52,7.54,7.37,7.47,7.44,7.27,7.46,7.37,7.24,7.31,7.12,7.10,7.10,7.15,7.03,7.11,6.93,6.91,6.94,6.95,6.93,6.88,6.88,6.88,6.93,6.94,6.97,6.91,6.77,6.75,6.71,6.75,6.69,6.78,6.74,6.79,6.76,6.98,6.84,6.94,7.03,6.97,6.88,6.83,6.74,6.89,6.91,6.87,6.97,6.93,6.80,6.72,6.63,6.47,6.51,6.45,6.48,6.47,6.48,6.45,6.47,6.53,6.42,6.33,6.27,6.38,6.33,6.31,6.22,6.20,6.18,6.17,6.12,6.13,6.12,6.08,5.98,6.18,6.30,6.48,6.38,6.35,6.37,6.42,6.36,6.16,6.13,6.27,6.18,6.06,5.91,5.89,5.82,5.70,5.64,5.64,5.65,5.60,5.48,5.46,5.40,5.29,5.20,5.25,5.23,5.36,5.33,5.50,5.57,5.79,5.73,5.65,5.70,5.79,5.69,5.67,5.85,5.87,5.97,5.91,5.97,5.78,5.95,5.98,6.00,6.16,6.11,6.13,6.15,6.09,6.27,6.08,6.02,5.85,5.93,5.81,5.90,6.10,6.07,6.05,5.90,5.91,5.93,5.90,5.95,5.92,5.82,6.01,6.09,6.06,5.87,6.08,5.95,6.13,6.15,6.21,6.17,6.13,6.14,6.12,6.03,6.24,6.26,6.23,6.22,6.20,6.25,6.23,6.25,6.32,6.14,6.22,6.21,6.35,6.39,6.25,6.18,6.27,6.28,6.31,6.30,6.38,6.29,6.15,6.17,6.13,6.09,6.19,6.15,6.02,6.02,6.11,6.24,6.33,6.31,6.18,6.11,6.11,6.13,6.13,6.09,6.10,6.18,6.11,6.09,6.06,5.79,5.81,5.76,5.80,5.84,5.91,6.12,6.33,6.44,6.40,6.46,6.46,6.47,6.48,6.49,6.72,6.71,6.73,6.73,6.72,6.72,6.60,6.52,6.62,6.69,7.00,7.11,7.08,7.10,6.93,6.88,6.80,6.80,6.68,6.79,6.78,6.93,6.77,6.77,6.87,6.88,6.75,6.85,6.91,6.79,6.94,6.87,6.75,6.83,6.85,6.83,6.92,7.07,7.02,6.84,6.84,6.76,6.89,7.10,7.11,7.08,7.03,6.95,7.02,7.07,7.11,7.14,7.13,7.22,7.34,7.35,7.35,7.33,7.37,7.34,7.21,7.15,7.17,7.21,7.11,7.14,7.13,7.04,7.15,6.82,6.87,6.90,6.90,6.83,6.77,6.99,6.73,6.38,6.31,6.27,6.35,6.26,6.14,6.22,6.08,6.02,6.12,6.18,6.17,6.23,6.20,6.14,6.07,6.11,6.21,6.22,6.28,6.25,6.43,6.46,6.49,6.59,6.83,6.82,6.82,7.01,6.91,6.90,6.80,6.91,6.88,6.85,6.75,6.75,6.80,6.83,6.84,6.67,6.53,6.41,6.39,6.37,6.32,6.35,6.47,6.55,6.55,6.63,6.58,6.59,6.51,6.65,6.84,6.89,7.02,6.92,6.92,6.95,7.13,7.01,7.06,7.18,7.37,7.35,7.34,7.26,7.13,7.13,7.09,7.04,7.03,6.98,6.97,6.86,6.79,6.90,7.01,7.05,7.04,6.96,6.97,6.94,6.77,6.79,6.72,6.76,6.78,6.83,6.91,7.18,7.05,7.21,7.29,7.33,7.39,7.23,7.26,7.27,7.23,7.18,7.12}};
//	1.2391752 0.7542372 0.5736852 0.7382222 1.1261202 
//	0.7542372 2.4269082 1.5493442 1.9158192 1.1378572 
//	0.5736852 1.5493442 2.4433342 1.8855712 0.8536252 
//	0.7382222 1.9158192 1.8855712 3.2662732 1.0809942 
//	1.1261202 1.1378572 0.8536252 1.0809942 2.1635962
	
	final float InstrumentsStatistics[][] = new float[INSTRUMENT_NUMBERS][4]; // Average of the return, standard

	public static void main(String[] args) {

		TestGPU testGPU = new TestGPU();
		testGPU.initTest();
		testGPU.computVaR(true);
		testGPU.computVaR(false);

	}

	private void initTest() {	
		for (int i = 0; i < INSTRUMENT_NUMBERS; i++) {
			// Assign an initial instrument value.
			this.instrumentsValueHistory[i][0] = (float) (Math.random() * 1_000_000);
		}

		for (int i = 0; i < INSTRUMENT_NUMBERS; i++) {
			for (int j = 0; j < OBSERVATIONS_HISTORY; j++) {
				// Create random variation around the first valuation
				float val = (float) (Math.random() >= 0.5 ? Math.random() * 5 : -1 * Math.random() * 5);
				this.instrumentsValueHistory[i][j] = this.instrumentsValueHistory[i][0]
						+ (this.instrumentsValueHistory[i][0] * val / 100);
			}
		}

	}

	private float computVaR(boolean gpu) {
		ValueAtRisk var = new ValueAtRisk(instrumentsValueHistory, TestGPU.INSTRUMENT_NUMBERS, TestGPU.OBSERVATIONS_HISTORY, !gpu);
		System.out.println(String.format("Start to compute Value at Risk on a %d instruments with %d observations. ", TestGPU.INSTRUMENT_NUMBERS, TestGPU.OBSERVATIONS_HISTORY));
		Long time = System.currentTimeMillis();
		var.execute();
		System.out.println(String.format("Time: %d ms", System.currentTimeMillis() - time));
		
//		for (int l = 0; l < TestGPU.INSTRUMENT_NUMBERS; l++) {
//			for (int c = 0; c < TestGPU.INSTRUMENT_NUMBERS; c++) {
//				System.out.print(String.format("%f ", var.getVarianceCovarianceMatrix()[l][c]));
//			}
//			System.out.println();
//		}

			
		System.out.println(var.getTargetDevice());
		return 0;
	}

}
